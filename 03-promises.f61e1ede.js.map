{"mappings":"AAAAA,QAAQC,IAAI,SAmCZ,SAASC,EAAcC,EAAUC,GAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACzBC,YAAW,KACHN,EACAI,EAAQ,C,SAACN,E,MAAUC,IAEZM,EAAA,C,SAACP,E,MAAUC,GAAO,GAE9BA,EAAM,G,CAzCFQ,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAkBC,GACdA,EAAMC,iBACN,MAAMC,EAAWF,EAAMG,cAAcD,SAC/Bb,EAAQe,OAAOF,EAASb,MAAMgB,OAC9BC,EAAOF,OAAOF,EAASI,KAAKD,OAC5BE,EAASH,OAAOF,EAASK,OAAOF,OACtCL,EAAMG,cAAcK,QAMnB,SAAuBC,EAAOH,EAAMC,GACrC,IAAIG,EAAaD,EACjB,IAAI,IAAIE,EAAE,EAAGA,GAAGJ,EAAQI,IACpB1B,QAAQC,IAAIyB,EAAGD,GAEfvB,EAAcwB,EAAGD,GAChBE,MAAK,EAACxB,SAACA,EAAQC,MAAEA,MAAYJ,QAAQC,IAAI,uBAAqBE,QAAiBC,MAAU,IACvFwB,OAAI,EAACzB,SAACA,EAAQC,MAAEA,MAAYJ,QAAQC,IAAI,sBAAoBE,QAAiBC,MAAU,IACvFyB,SAAM,SAETJ,GAAcJ,C,CAflBS,CAAmB1B,EAAOiB,EAAMC,E,IAqC/BtB,QAAGC,IAAI","sources":["src/js/03-promises.js"],"sourcesContent":["console.log('test3');\n\n// ======= Submit Btn =======\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n    event.preventDefault();\n    const elements = event.currentTarget.elements;\n    const delay = Number(elements.delay.value);\n    const step = Number(elements.step.value);\n    const amount = Number(elements.amount.value);\n    event.currentTarget.reset();\n    makeSeveralPromise(delay, step, amount);\n}\n// ======= Submit Btn /Конец =======\n\n\nfunction makeSeveralPromise(delay, step, amount) {\n    let delayStart = delay;\n    for(let i=1; i<=amount; i++) {\n        console.log(i, delayStart);\n        \n        createPromise(i, delayStart)\n        .then(({position, delay}) => {console.log(`✅ Fulfilled promise ${position} in ${delay}ms`); })\n        .catch(({position, delay}) => {console.log(`❌ Rejected promise ${position} in ${delay}ms`); })\n        .finally(() => { });\n        \n        delayStart += step;\n    }\n}\n\n\n// ==== Promise =====\n\nfunction createPromise(position, delay) { //1.2.3...  1000\n    const shouldResolve = Math.random() > 0.5;\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve({position, delay}); //, position, delay  / 'ку-ку это resolve'\n              } else {\n                reject({position, delay}); //, position, delay / 'ку-ку это reject'\n              }\n        }, delay);\n    });  \n  };\n\n// ==== Promise /Конец =====\n\nconsole.log('By Конец');"],"names":["console","log","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","currentTarget","Number","value","step","amount","reset","delay1","delayStart","i","then","catch","finally","$47d4ff9957288465$var$makeSeveralPromise"],"version":3,"file":"03-promises.f61e1ede.js.map"}