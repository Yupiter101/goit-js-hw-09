{"mappings":"YAmCA,SAASA,EAAcC,EAAUC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,YAAW,WACHN,EACAI,EAAQ,CAACN,WAAUC,UAEZM,EAAA,CAACP,WAAUC,S,GAEvBA,E,IA5CXQ,QAAQC,IAAI,SAGGC,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAkBC,GACdA,EAAMC,iBACN,IAAMC,EAAWF,EAAMG,cAAcD,SAC/Bf,EAAQiB,OAAOF,EAASf,MAAMkB,OAC9BC,EAAOF,OAAOF,EAASI,KAAKD,OAC5BE,EAASH,OAAOF,EAASK,OAAOF,OACtCL,EAAMG,cAAcK,QAMnB,SAAuBrB,EAAOmB,EAAMC,GAErC,IADA,IAAIE,EAAatB,EACTuB,EAAE,EAAGA,GAAGH,EAAQG,IACpBf,QAAQC,IAAIc,EAAGD,GAEfxB,EAAcyB,EAAGD,GAChBE,MAAK,SAAAC,G,IAAE1B,EAAQ0B,EAAR1B,SAAU2B,EAAKD,EAALzB,MAAYQ,QAAQC,IAAI,uBAAwCkB,OAAf5B,EAAS,QAAY4B,OAAND,EAAM,M,IACrFE,OAAI,SAAAH,G,IAAE1B,EAAQ0B,EAAR1B,SAAU2B,EAAKD,EAALzB,MAAYQ,QAAQC,IAAI,sBAAuCkB,OAAf5B,EAAS,QAAY4B,OAAND,EAAM,M,IACrFG,SAAM,WAAM,IAEfP,GAAcH,C,CAflBW,CAAmB9B,EAAOmB,EAAMC,E,IAqC/BZ,QAAGC,IAAI,W","sources":["src/js/03-promises.js"],"sourcesContent":["console.log('test3');\n\n// ======= Submit Btn =======\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n    event.preventDefault();\n    const elements = event.currentTarget.elements;\n    const delay = Number(elements.delay.value);\n    const step = Number(elements.step.value);\n    const amount = Number(elements.amount.value);\n    event.currentTarget.reset();\n    makeSeveralPromise(delay, step, amount);\n}\n// ======= Submit Btn /Конец =======\n\n\nfunction makeSeveralPromise(delay, step, amount) {\n    let delayStart = delay;\n    for(let i=1; i<=amount; i++) {\n        console.log(i, delayStart);\n        \n        createPromise(i, delayStart)\n        .then(({position, delay}) => {console.log(`✅ Fulfilled promise ${position} in ${delay}ms`); })\n        .catch(({position, delay}) => {console.log(`❌ Rejected promise ${position} in ${delay}ms`); })\n        .finally(() => { });\n        \n        delayStart += step;\n    }\n}\n\n\n// ==== Promise =====\n\nfunction createPromise(position, delay) { //1.2.3...  1000\n    const shouldResolve = Math.random() > 0.5;\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve({position, delay}); //, position, delay  / 'ку-ку это resolve'\n              } else {\n                reject({position, delay}); //, position, delay / 'ку-ку это reject'\n              }\n        }, delay);\n    });  \n  };\n\n// ==== Promise /Конец =====\n\nconsole.log('By Конец');"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","console","log","document","querySelector","addEventListener","event","preventDefault","elements","currentTarget","Number","value","step","amount","reset","delayStart","i","then","param","_$delay","concat","catch","finally","$ce04d3a99e08e73b$var$makeSeveralPromise"],"version":3,"file":"03-promises.bf2ddb6c.js.map"}